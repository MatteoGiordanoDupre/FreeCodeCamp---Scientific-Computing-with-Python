import random
import copy

class Hat:
    def __init__(self, **balls):
        self.contents = []
        for color, count in balls.items():
            self.contents.extend([color] * count)

    def draw(self, num_balls):
        if num_balls >= len(self.contents):
            # Return all balls and reset contents to original state
            drawn_balls = self.contents[:]
            self.contents = []
            return drawn_balls
        else:
            balls_drawn = random.sample(self.contents, num_balls)
            for ball in balls_drawn:
                self.contents.remove(ball)
            return balls_drawn

def experiment(hat, expected_balls, num_balls_drawn, num_experiments):
    #
    M = 0
    for _ in range(num_experiments):
        hat_copy = copy.deepcopy(hat)
        drawn_balls = hat_copy.draw(num_balls_drawn)
        drawn_ball_count = {}
        for ball in drawn_balls:
            drawn_ball_count[ball] = drawn_ball_count.get(ball, 0) + 1
        success = True
        for color, count in expected_balls.items():
            if drawn_ball_count.get(color, 0) < count:
                success = False
                break
        if success:
            M += 1
    return M / num_experiments


